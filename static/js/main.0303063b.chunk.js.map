{"version":3,"sources":["components/Login/Login.js","components/Register/Register.js","components/Addroom/Addroom.js","components/Messages/Messages.js","components/NewMessage/NewMessage.js","components/Rooms/Rooms.js","components/Main/Main.js","components/Main/initialize.js","App.js","registerServiceWorker.js","index.js","components/assets/photo1.jpg"],"names":["styles","button","margin","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onUsernameChangeHandler","event","setState","UsernameInput","target","value","onPasswordChangeHandler","PasswordInput","onLoginPressButton","fetch","method","headers","Content-Type","body","JSON","stringify","userid","state","pass","then","res","json","response","id","props","userHandler","catch","error","console","log","_this2","react_default","a","createElement","Grid_default","container","justify","alignItems","style","height","backgroundImage","concat","background","backgroundSize","Card_default","width","direction","CardHeader_default","title","TextField_default","label","type","onChange","Button_default","onClick","variant","marginBottom","size","color","changeRoute","Component","Register","onRegisterPressed","Addroom","className","onSubmit","createRoom","placeholder","inputRoom","Messages","messages","map","message","index","key","senderId","split","text","NewMessage","sendMessage","inputMessage","disabled","Rooms","sortedRooms","toConsumableArray","rooms","sort","b","room","subscribeToRoom","href","name","React","Main","roomid","currentUser","roomId","hooks","onNewMessage","messageLimit","err","getAllRooms","getJoinableRooms","roomName","e","preventDefault","messageId","ChatManager","instanceLocator","userId","user","tokenProvider","TokenProvider","url","connect","components_Rooms_Rooms","components_Messages_Messages","components_Addroom_Addroom","components_NewMessage_NewMessage","App","changeRouteHandler","route","page","components_Register_Register","components_Login_Login","components_Main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0303063b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport background from \"../assets/photo1.jpg\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tmargin: \"20px auto\"\r\n\t}\r\n};\r\nclass Login extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tUsernameInput: \"\",\r\n\t\t\tPasswordInput: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tonUsernameChangeHandler = event => {\r\n\t\tthis.setState({ UsernameInput: event.target.value });\r\n\t};\r\n\r\n\tonPasswordChangeHandler = event => {\r\n\t\tthis.setState({ PasswordInput: event.target.value });\r\n\t};\r\n\r\n\tonLoginPressButton = () => {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/login\", {\r\n\t\t\tmethod: \"POST\", // or 'PUT'\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuserid: this.state.UsernameInput,\r\n\t\t\t\tpass: this.state.PasswordInput\r\n\t\t\t}) // data can be `string` or {object}!\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.id) {\r\n\t\t\t\t\tthis.props.userHandler(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(\"User not found\"));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\tbackgroundImage: `url(${background})`,\r\n\t\t\t\t\tbackgroundSize: \"cover\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card style={{ width: \"300px\" }}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader title=\"Login\" />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onUsernameChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onPasswordChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={this.onLoginPressButton}\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.changeRoute(\"register\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClick here to register\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport background from \"../assets/photo1.jpg\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tmargin: \"20px auto\"\r\n\t}\r\n};\r\nclass Register extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tUsernameInput: \"\",\r\n\t\t\tPasswordInput: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tonUsernameChangeHandler = event => {\r\n\t\tthis.setState({ UsernameInput: event.target.value });\r\n\t};\r\n\r\n\tonPasswordChangeHandler = event => {\r\n\t\tthis.setState({ PasswordInput: event.target.value });\r\n\t};\r\n\r\n\tonRegisterPressed = () => {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/register\", {\r\n\t\t\tmethod: \"POST\", // or 'PUT'\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuserid: this.state.UsernameInput,\r\n\t\t\t\tpass: this.state.PasswordInput\r\n\t\t\t}) // data can be `string` or {object}!\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.id) {\r\n\t\t\t\t\tthis.props.userHandler(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(\"Register failed\"));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\tbackgroundImage: `url(${background})`,\r\n\t\t\t\t\tbackgroundSize: \"cover\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card style={{ width: \"300px\" }}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader title=\"Register\" />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onUsernameChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onPasswordChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={this.onRegisterPressed}\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.changeRoute(\"login\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClick here to login\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Addroom = props => {\r\n\treturn (\r\n\t\t<div className=\"add-room\">\r\n\t\t\t<form onSubmit={props.createRoom}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter a room name\"\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={props.inputRoom}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Addroom;\r\n","import React from \"react\";\r\n\r\nconst Messages = props => {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div className=\"message-list\">\r\n\t\t\t{props.messages.map((message, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"message\" key={index}>\r\n\t\t\t\t\t\t<div className=\"message-username\">\r\n\t\t\t\t\t\t\t{message.senderId.split(\".\", 1)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"message-text\">{message.text}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\n\r\nconst NewMessage = props => {\r\n\treturn (\r\n\t\t<form className=\"input\" onSubmit={props.sendMessage}>\r\n\t\t\t<input\r\n\t\t\t\tplaceholder=\"Enter a message\"\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.inputMessage}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default NewMessage;\r\n","import React from \"react\";\r\n\r\nclass Rooms extends React.Component {\r\n\trender() {\r\n\t\tconst sortedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id);\r\n\t\treturn (\r\n\t\t\t<div className=\"rooms-list\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{sortedRooms.map((room, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li className=\"room\" key={index}>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tthis.props.subscribeToRoom(room.id)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\thref=\"# \"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{room.name}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Rooms;\r\n","import React, { Component } from \"react\";\r\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\r\nimport Addroom from \"../Addroom/Addroom\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport NewMessage from \"../NewMessage/NewMessage\";\r\nimport Rooms from \"../Rooms/Rooms\";\r\nimport { instanceLocator, tokenProvider } from \"./initialize\";\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmessages: [],\r\n\t\t\trooms: [],\r\n\t\t\tinputMessage: \"\",\r\n\t\t\troomName: \"\",\r\n\t\t\troomid: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst chatManager = new ChatManager({\r\n\t\t\tinstanceLocator: instanceLocator,\r\n\t\t\tuserId: this.props.user.id,\r\n\t\t\ttokenProvider: new TokenProvider({\r\n\t\t\t\turl: tokenProvider\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tchatManager\r\n\t\t\t.connect()\r\n\t\t\t.then(currentUser => {\r\n\t\t\t\tconsole.log(currentUser)\r\n\t\t\t\tthis.currentUser = currentUser;\r\n\t\t\t\tthis.getAllRooms();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(\"Error on connection\", err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubscribeToRoom = roomid => {\r\n\t\tthis.setState({ messages: [], roomid: roomid });\r\n\t\tthis.currentUser\r\n\t\t\t.subscribeToRoom({\r\n\t\t\t\troomId: roomid,\r\n\t\t\t\thooks: {\r\n\t\t\t\t\tonNewMessage: message => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tmessages: [...this.state.messages, message]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tmessageLimit: 10\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(\"something went wrong\"));\r\n\t};\r\n\r\n\tgetAllRooms = () => {\r\n\t\tthis.currentUser\r\n\t\t\t.getJoinableRooms()\r\n\t\t\t.then(rooms => {\r\n\t\t\t\tthis.setState({ rooms: [...rooms, ...this.currentUser.rooms] });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error getting joinable rooms: ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tinputMessage = event => {\r\n\t\tthis.setState({ inputMessage: event.target.value });\r\n\t};\r\n\r\n\tinputRoom = event => {\r\n\t\tthis.setState({ roomName: event.target.value });\r\n\t};\r\n\r\n\tcreateRoom = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.currentUser\r\n\t\t\t.createRoom({\r\n\t\t\t\tname: this.state.roomName\r\n\t\t\t})\r\n\t\t\t.then(room => {\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\tthis.setState({ roomName: \"\" });\r\n\t\t\t\t\tthis.getAllRooms();\r\n\t\t\t\t\tthis.subscribeToRoom(room.id);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error creating room ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tsendMessage = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.currentUser\r\n\t\t\t.sendMessage({\r\n\t\t\t\ttext: this.state.inputMessage,\r\n\t\t\t\troomId: this.state.roomid\r\n\t\t\t})\r\n\r\n\t\t\t.then(messageId => {\r\n\t\t\t\tif (messageId) {\r\n\t\t\t\t\tthis.setState({ inputMessage: \"\" });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error adding message to my room: ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<div className=\"top-row\">\r\n\t\t\t\t\t<Rooms\r\n\t\t\t\t\t\tsubscribeToRoom={this.subscribeToRoom}\r\n\t\t\t\t\t\trooms={this.state.rooms}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Messages messages={this.state.messages} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bottom-row\">\r\n\t\t\t\t\t<Addroom\r\n\t\t\t\t\t\tcreateRoom={this.createRoom}\r\n\t\t\t\t\t\tinputRoom={this.inputRoom}\r\n\t\t\t\t\t\tvalue={this.state.roomName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NewMessage\r\n\t\t\t\t\t\tdisabled={!this.state.roomid}\r\n\t\t\t\t\t\tsendMessage={this.sendMessage}\r\n\t\t\t\t\t\tinputMessage={this.inputMessage}\r\n\t\t\t\t\t\tvalue={this.state.inputMessage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Main;\r\n","export const instanceLocator = \"v1:us1:70765878-2ac8-4e66-938d-b18c7503aded\";\r\n\r\nexport const tokenProvider = \"https://chatback123.herokuapp.com/auth\";\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Main from \"./components/Main/Main\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\troute: \"login\",\r\n\t\t\tuser: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/\");\r\n\t}\r\n\r\n\tchangeRouteHandler = route => {\r\n\t\tthis.setState({ route: route });\r\n\t};\r\n\r\n\tuserHandler = user => {\r\n\t\tthis.setState({ user: user, route: \"app\" });\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet page;\r\n\t\tif (this.state.route === \"register\") {\r\n\t\t\tpage = (\r\n\t\t\t\t<Register\r\n\t\t\t\t\tchangeRoute={this.changeRouteHandler}\r\n\t\t\t\t\tuserHandler={this.userHandler}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (this.state.route === \"login\") {\r\n\t\t\tpage = (\r\n\t\t\t\t<Login\r\n\t\t\t\t\tuserHandler={this.userHandler}\r\n\t\t\t\t\tchangeRoute={this.changeRouteHandler}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (this.state.route === \"app\") {\r\n\t\t\tpage = <Main user={this.state.user} />;\r\n\t\t}\r\n\r\n\t\treturn <div>{page}</div>;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/photo1.aa57deaa.jpg\";"],"sourceRoot":""}