{"version":3,"sources":["components/Login/Login.js","components/Register/Register.js","components/Addroom/Addroom.js","components/Messages/Messages.js","components/NewMessage/NewMessage.js","components/Rooms/Rooms.js","actions.js","components/Main/Main.js","components/Main/initialize.js","App.js","reducers.js","index.js","components/assets/photo1.jpg"],"names":["styles","button","margin","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onUsernameChangeHandler","event","setState","UsernameInput","target","value","onPasswordChangeHandler","PasswordInput","onLoginPressButton","fetch","method","headers","Content-Type","body","JSON","stringify","userid","state","pass","then","res","json","response","id","props","userHandler","changeRoute","catch","error","console","log","_this2","react_default","a","createElement","Grid_default","container","justify","alignItems","style","height","backgroundImage","concat","background","backgroundSize","Card_default","width","direction","CardHeader_default","title","TextField_default","label","type","onChange","Button_default","onClick","variant","marginBottom","size","color","Component","Register","onRegisterPressed","Addroom","className","onSubmit","createRoom","placeholder","inputRoom","Messages","messages","map","message","index","key","senderId","parts","payload","content","NewMessage","_ref","sendMessage","inputMessage","disabled","Rooms","sortedRooms","toConsumableArray","rooms","sort","b","room","subscribeToRoom","href","name","React","clearInput","input","Main","roomid","allMessages","getRoomId","currentUser","subscribeToRoomMultipart","roomId","hooks","onMessage","messageLimit","err","getAllRooms","getJoinableRooms","allRooms","e","preventDefault","roomName","clearRoomInput","sendSimpleMessage","text","messageId","clearMessageInput","ChatManager","instanceLocator","userId","user","tokenProvider","TokenProvider","url","connect","_this$props","onInputMessage","onInputRoom","components_Rooms_Rooms","components_Messages_Messages","components_Addroom_Addroom","components_NewMessage_NewMessage","reducer1","dispatch","data","App","page","changeRouteHandler","route","components_Register_Register","components_Login_Login","components_Main_Main","setRoute","initialState","rootReducers","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.13625aa9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport background from \"../assets/photo1.jpg\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tmargin: \"20px auto\"\r\n\t}\r\n};\r\nclass Login extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tUsernameInput: \"\",\r\n\t\t\tPasswordInput: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tonUsernameChangeHandler = event => {\r\n\t\tthis.setState({ UsernameInput: event.target.value });\r\n\t};\r\n\r\n\tonPasswordChangeHandler = event => {\r\n\t\tthis.setState({ PasswordInput: event.target.value });\r\n\t};\r\n\r\n\tonLoginPressButton = () => {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/login\", {\r\n\t\t\tmethod: \"POST\", // or 'PUT'\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuserid: this.state.UsernameInput,\r\n\t\t\t\tpass: this.state.PasswordInput\r\n\t\t\t}) // data can be `string` or {object}!\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.id) {\r\n\t\t\t\t\tthis.props.userHandler(response);\r\n\t\t\t\t\tthis.props.changeRoute(\"app\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(\"User not found\"));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\tbackgroundImage: `url(${background})`,\r\n\t\t\t\t\tbackgroundSize: \"cover\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card style={{ width: \"300px\" }}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader title=\"Login\" />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onUsernameChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onPasswordChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={this.onLoginPressButton}\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.changeRoute(\"register\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClick here to register\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport background from \"../assets/photo1.jpg\";\r\n\r\nconst styles = {\r\n\tbutton: {\r\n\t\tmargin: \"20px auto\"\r\n\t}\r\n};\r\nclass Register extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tUsernameInput: \"\",\r\n\t\t\tPasswordInput: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tonUsernameChangeHandler = event => {\r\n\t\tthis.setState({ UsernameInput: event.target.value });\r\n\t};\r\n\r\n\tonPasswordChangeHandler = event => {\r\n\t\tthis.setState({ PasswordInput: event.target.value });\r\n\t};\r\n\r\n\tonRegisterPressed = () => {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/register\", {\r\n\t\t\tmethod: \"POST\", // or 'PUT'\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuserid: this.state.UsernameInput,\r\n\t\t\t\tpass: this.state.PasswordInput\r\n\t\t\t}) // data can be `string` or {object}!\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tif (response.id) {\r\n\t\t\t\t\tthis.props.userHandler(response);\r\n\t\t\t\t\tthis.props.changeRoute(\"app\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(\"Register failed\"));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\tbackgroundImage: `url(${background})`,\r\n\t\t\t\t\tbackgroundSize: \"cover\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card style={{ width: \"300px\" }}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader title=\"Register\" />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onUsernameChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tstyle={{ width: \"200px\" }}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\tonChange={this.onPasswordChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={this.onRegisterPressed}\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.changeRoute(\"login\")}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClick here to login\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Addroom = props => {\r\n\treturn (\r\n\t\t<div className=\"add-room\">\r\n\t\t\t<form onSubmit={props.createRoom}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter a room name\"\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={props.inputRoom}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Addroom;\r\n","import React from \"react\";\r\n\r\nconst Messages = props => {\r\n\treturn (\r\n\t\t<div className=\"message-list\">\r\n\t\t\t{props.messages.map((message, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"message\" key={index}>\r\n\t\t\t\t\t\t<div className=\"message-username\">\r\n\t\t\t\t\t\t\t{message.senderId}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"message-text\">\r\n\t\t\t\t\t\t\t{message.parts[0].payload.content}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\n\r\nconst NewMessage = ({ sendMessage, inputMessage, value, disabled }) => {\r\n\treturn (\r\n\t\t<form className=\"input\" onSubmit={sendMessage}>\r\n\t\t\t<input\r\n\t\t\t\tplaceholder=\"Enter a message\"\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={inputMessage}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default NewMessage;\r\n","import React from \"react\";\r\n\r\nclass Rooms extends React.Component {\r\n\trender() {\r\n\t\tconst sortedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id);\r\n\t\treturn (\r\n\t\t\t<div className=\"rooms-list\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{sortedRooms.map((room, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li className=\"room\" key={index}>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tthis.props.subscribeToRoom(room.id)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\thref=\"# \"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{room.name}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Rooms;\r\n","const SET_MESSAGE = \"SET_MESSAGE\";\r\nconst SET_ROOM = \"SET_ROOM\";\r\nconst SET_ROUTE = \"SET_ROUTE\";\r\nconst SET_USER = \"SET_USER\";\r\nconst GET_MESSAGES = \"GET_MESSAGES\";\r\nconst GET_ROOMS = \"GET_ROOMS\";\r\nconst GET_ROOM_ID = \"GET_ROOM_ID\";\r\nconst CLEAR_MESSAGE_INPUT = \"CLEAR_MESSAGE_INPUT\";\r\nconst CLEAR_ROOM_INPUT = \"CLEAR_ROOM_INPUT\";\r\n\r\nexport const setMessageField = text => {\r\n\treturn {\r\n\t\ttype: SET_MESSAGE,\r\n\t\tpayload: text\r\n\t};\r\n};\r\n\r\nexport const setRoomField = text => {\r\n\treturn {\r\n\t\ttype: SET_ROOM,\r\n\t\tpayload: text\r\n\t};\r\n};\r\n\r\nexport const setRoute = route => {\r\n\treturn {\r\n\t\ttype: SET_ROUTE,\r\n\t\tpayload: route\r\n\t};\r\n};\r\n\r\nexport const setUser = text => {\r\n\treturn {\r\n\t\ttype: SET_USER,\r\n\t\tpayload: text\r\n\t};\r\n};\r\n\r\nexport const setMessages = messagesArray => {\r\n\treturn {\r\n\t\ttype: GET_MESSAGES,\r\n\t\tpayload: messagesArray\r\n\t};\r\n};\r\n\r\nexport const setAllRooms = roomsArray => {\r\n\treturn {\r\n\t\ttype: GET_ROOMS,\r\n\t\tpayload: roomsArray\r\n\t};\r\n};\r\n\r\nexport const getRoomId = id => {\r\n\treturn {\r\n\t\ttype: GET_ROOM_ID,\r\n\t\tpayload: id\r\n\t};\r\n};\r\n\r\nexport const clearInput = input => {\r\n\tif (input === \"message\") {\r\n\t\treturn {\r\n\t\t\ttype: CLEAR_MESSAGE_INPUT\r\n\t\t};\r\n\t} else if (input === \"room\") {\r\n\t\treturn {\r\n\t\t\ttype: CLEAR_ROOM_INPUT\r\n\t\t};\r\n\t}\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { ChatManager, TokenProvider } from \"@pusher/chatkit-client\";\r\nimport Addroom from \"../Addroom/Addroom\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport NewMessage from \"../NewMessage/NewMessage\";\r\nimport Rooms from \"../Rooms/Rooms\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tsetMessageField,\r\n\tsetRoomField,\r\n\tsetMessages,\r\n\tsetAllRooms,\r\n\tgetRoomId,\r\n\tclearInput\r\n} from \"../../actions.js\";\r\n\r\nimport { instanceLocator, tokenProvider } from \"./initialize\";\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tinputMessage: state.reducer1.inputMessage,\r\n\t\troomName: state.reducer1.roomName,\r\n\t\tmessages: state.reducer1.messages,\r\n\t\trooms: state.reducer1.rooms,\r\n\t\troomid: state.reducer1.roomid\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonInputMessage: event => dispatch(setMessageField(event.target.value)),\r\n\t\tonInputRoom: event => dispatch(setRoomField(event.target.value)),\r\n\t\tallMessages: data => dispatch(setMessages(data)),\r\n\t\tallRooms: data => dispatch(setAllRooms(data)),\r\n\t\tgetRoomId: id => dispatch(getRoomId(id)),\r\n\t\tclearMessageInput: () => dispatch(clearInput(\"message\")),\r\n\t\tclearRoomInput: () => dispatch(clearInput(\"room\"))\r\n\t};\r\n};\r\n\r\nclass Main extends Component {\r\n\tcomponentDidMount() {\r\n\t\tconst chatManager = new ChatManager({\r\n\t\t\tinstanceLocator: instanceLocator,\r\n\t\t\tuserId: this.props.user.id,\r\n\t\t\ttokenProvider: new TokenProvider({\r\n\t\t\t\turl: tokenProvider\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tchatManager\r\n\t\t\t.connect()\r\n\t\t\t.then(currentUser => {\r\n\t\t\t\tthis.currentUser = currentUser;\r\n\t\t\t\tthis.getAllRooms();\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(\"Error on connection\", err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubscribeToRoom = roomid => {\r\n\t\tthis.props.allMessages([]);\r\n\t\tthis.props.getRoomId(roomid);\r\n\t\tthis.currentUser\r\n\t\t\t.subscribeToRoomMultipart({\r\n\t\t\t\troomId: roomid,\r\n\t\t\t\thooks: {\r\n\t\t\t\t\tonMessage: message => {\r\n\t\t\t\t\t\tthis.props.allMessages([\r\n\t\t\t\t\t\t\t...this.props.messages,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tmessageLimit: 10\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(\"something went wrong\"));\r\n\t};\r\n\r\n\tgetAllRooms = () => {\r\n\t\tthis.currentUser\r\n\t\t\t.getJoinableRooms()\r\n\t\t\t.then(rooms => {\r\n\t\t\t\tthis.props.allRooms([...rooms, ...this.currentUser.rooms]);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error getting joinable rooms: ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tcreateRoom = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.currentUser\r\n\t\t\t.createRoom({\r\n\t\t\t\tname: this.props.roomName\r\n\t\t\t})\r\n\t\t\t.then(room => {\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\tthis.props.clearRoomInput();\r\n\t\t\t\t\t// this.setState({ roomName: \"\" });\r\n\t\t\t\t\tthis.getAllRooms();\r\n\t\t\t\t\tthis.subscribeToRoom(room.id);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error creating room ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\tsendMessage = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.currentUser\r\n\t\t\t.sendSimpleMessage({\r\n\t\t\t\ttext: this.props.inputMessage,\r\n\t\t\t\troomId: this.props.roomid\r\n\t\t\t})\r\n\t\t\t.then(messageId => {\r\n\t\t\t\tconsole.log(messageId);\r\n\t\t\t\tif (messageId) {\r\n\t\t\t\t\tthis.props.clearMessageInput();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(`Error adding message to my room: ${err}`);\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tonInputMessage,\r\n\t\t\tonInputRoom,\r\n\t\t\troomName,\r\n\t\t\tinputMessage,\r\n\t\t\trooms,\r\n\t\t\tmessages,\r\n\t\t\troomid\r\n\t\t} = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<div className=\"top-row\">\r\n\t\t\t\t\t<Rooms\r\n\t\t\t\t\t\tsubscribeToRoom={this.subscribeToRoom}\r\n\t\t\t\t\t\trooms={rooms}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Messages messages={messages} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bottom-row\">\r\n\t\t\t\t\t<Addroom\r\n\t\t\t\t\t\tcreateRoom={this.createRoom}\r\n\t\t\t\t\t\tinputRoom={onInputRoom}\r\n\t\t\t\t\t\tvalue={roomName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<NewMessage\r\n\t\t\t\t\t\tdisabled={!roomid}\r\n\t\t\t\t\t\tsendMessage={this.sendMessage}\r\n\t\t\t\t\t\tinputMessage={onInputMessage}\r\n\t\t\t\t\t\tvalue={inputMessage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Main);\r\n","export const instanceLocator = \"v1:us1:70765878-2ac8-4e66-938d-b18c7503aded\";\r\n\r\nexport const tokenProvider = \"https://chatback123.herokuapp.com/auth\";\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Main from \"./components/Main/Main\";\r\nimport \"./App.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setRoute, setUser } from \"./actions\";\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\troute: state.reducer1.route,\r\n\t\tuser: state.reducer1.user\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tchangeRouteHandler: route => dispatch(setRoute(route)),\r\n\t\tuserHandler: user => dispatch(setUser(user))\r\n\t};\r\n};\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://chatback123.herokuapp.com/\");\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { changeRouteHandler, userHandler, user, route } = this.props;\r\n\t\tlet page;\r\n\t\tif (route === \"register\") {\r\n\t\t\tpage = (\r\n\t\t\t\t<Register\r\n\t\t\t\t\tchangeRoute={changeRouteHandler}\r\n\t\t\t\t\tuserHandler={userHandler}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (route === \"login\") {\r\n\t\t\tpage = (\r\n\t\t\t\t<Login\r\n\t\t\t\t\tuserHandler={userHandler}\r\n\t\t\t\t\tchangeRoute={changeRouteHandler}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (route === \"app\") {\r\n\t\t\tpage = <Main user={user} />;\r\n\t\t}\r\n\r\n\t\treturn <div>{page}</div>;\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n","const SET_MESSAGE = \"SET_MESSAGE\";\r\nconst SET_ROOM = \"SET_ROOM\";\r\nconst SET_ROUTE = \"SET_ROUTE\";\r\nconst SET_USER = \"SET_USER\";\r\nconst GET_MESSAGES = \"GET_MESSAGES\";\r\nconst GET_ROOMS = \"GET_ROOMS\";\r\nconst GET_ROOM_ID = \"GET_ROOM_ID\";\r\nconst CLEAR_MESSAGE_INPUT = \"CLEAR_MESSAGE_INPUT\";\r\nconst CLEAR_ROOM_INPUT = \"CLEAR_ROOM_INPUT\";\r\n\r\nconst initialState = {\r\n\tinputMessage: \"\",\r\n\troomName: \"\",\r\n\troute: \"login\",\r\n\tuser: \"\",\r\n\tmessages: [],\r\n\trooms: [],\r\n\troomid: null\r\n};\r\n\r\nexport const reducer1 = (state = initialState, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_MESSAGE:\r\n\t\t\treturn Object.assign({}, state, { inputMessage: action.payload });\r\n\t\tcase SET_ROOM:\r\n\t\t\treturn Object.assign({}, state, { roomName: action.payload });\r\n\t\tcase SET_ROUTE:\r\n\t\t\treturn Object.assign({}, state, { route: action.payload });\r\n\t\tcase SET_USER:\r\n\t\t\treturn Object.assign({}, state, { user: action.payload });\r\n\t\tcase GET_MESSAGES:\r\n\t\t\treturn Object.assign({}, state, { messages: action.payload });\r\n\t\tcase GET_ROOMS:\r\n\t\t\treturn Object.assign({}, state, { rooms: action.payload });\r\n\t\tcase GET_ROOM_ID:\r\n\t\t\treturn Object.assign({}, state, { roomid: action.payload });\r\n\t\tcase CLEAR_MESSAGE_INPUT:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tinputMessage: initialState.inputMessage\r\n\t\t\t});\r\n\t\tcase CLEAR_ROOM_INPUT:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\troomName: initialState.roomName\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n/*const SET_MESSAGE = \"SET_MESSAGE\";\r\nconst SET_ROOM = \"SET_ROOM\";\r\nconst SET_ROUTE = \"SET_ROUTE\";\r\nconst SET_USER = \"SET_USER\";\r\nconst GET_MESSAGES = \"GET_MESSAGES\";\r\nconst GET_ROOMS = \"GET_ROOMS\";\r\nconst GET_ROOM_ID = \"GET_ROOM_ID\";\r\n\r\nconst initialMessage = {\r\n\tinputMessage: \"\"\r\n};\r\n\r\nexport const sendMessage = (state = initialMessage, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_MESSAGE:\r\n\t\t\treturn Object.assign({}, state, { inputMessage: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialRoom = {\r\n\troomName: \"\"\r\n};\r\n\r\nexport const addRoom = (state = initialRoom, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ROOM:\r\n\t\t\treturn Object.assign({}, state, { roomName: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialRoute = {\r\n\troute: \"login\"\r\n};\r\n\r\nexport const appRoute = (state = initialRoute, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ROUTE:\r\n\t\t\treturn Object.assign({}, state, { route: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialUser = {\r\n\tuser: \"\"\r\n};\r\n\r\nexport const userName = (state = initialUser, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER:\r\n\t\t\treturn Object.assign({}, state, { user: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialMessages = {\r\n\tmessages: []\r\n};\r\n\r\nexport const messages = (state = initialMessages, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_MESSAGES:\r\n\t\t\treturn Object.assign({}, state, { messages: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialRooms = {\r\n\trooms: []\r\n};\r\n\r\nexport const allRooms = (state = initialRooms, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ROOMS:\r\n\t\t\treturn Object.assign({}, state, { rooms: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst initialRoomId = {\r\n\troomid: null\r\n};\r\n\r\nexport const roomId = (state = initialRoomId, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ROOM_ID:\r\n\t\t\treturn Object.assign({}, state, { roomid: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n*/\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nimport logger from \"redux-logger\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { reducer1 } from \"./reducers.js\";\r\n\r\nconst rootReducers = combineReducers({\r\n\treducer1\r\n});\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(logger));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/photo1.aa57deaa.jpg\";"],"sourceRoot":""}